name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read
      actions: write

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17 for Android Build
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk-version: 25.2.9519653

      - name: Set up Node.js for WebIDE
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "**/package*.json"

      - name: Set up Python for AI Integration
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Android SDK Components
        run: |
          echo "Installing Android SDK components for WebLabs-MobIDE..."
          sdkmanager --install "platforms;android-34" "build-tools;34.0.0" "platform-tools"
          sdkmanager --install "ndk;25.2.9519653"
          echo "Android SDK setup complete"

      - name: Set up Docker for Ubuntu Environment
        run: |
          echo "Setting up Docker for Ubuntu 24.04 ARM64 environment..."
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          echo "Docker setup complete"

      - name: Install JavaScript dependencies (if package.json exists)
        run: |
          if [ -f "package.json" ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Install Python dependencies for AI features
        run: |
          pip install --upgrade pip
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          pip install transformers huggingface_hub accelerate safetensors
          echo "Python AI dependencies installed"

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up workspace structure
        run: |
          echo "Creating WebLabs-MobIDE workspace structure..."
          mkdir -p workspace/{projects,ai/{models,cache},logs}
          mkdir -p app/src/main/assets/{scripts,webide,models}
          echo "Workspace structure created"

      - name: Verify Docker Ubuntu environment readiness
        run: |
          echo "üê≥ Verifying Docker Ubuntu environment setup..."
          docker --version
          docker-compose --version
          echo "‚úÖ Docker environment ready for WebLabs-MobIDE"

      - name: Validate Android build environment
        run: |
          echo "üöÄ Validating Android build environment..."
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -la $ANDROID_HOME/
          ./gradlew validateDockerApp
          echo "‚úÖ Android build environment validated"

      - name: Setup complete notification
        run: |
          echo "üéâ WebLabs-MobIDE Copilot Setup Complete!"
          echo "‚úÖ Android SDK 34 with NDK 25.2.9519653"
          echo "‚úÖ Docker Ubuntu 24.04 ARM64 ready"
          echo "‚úÖ Node.js 20 for WebIDE"
          echo "‚úÖ Python 3.11 with AI libraries"
          echo "‚úÖ Gradle build system ready"
          echo "‚úÖ Workspace structure created"
          echo "üöÄ Ready for production APK build!"